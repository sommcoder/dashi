import "./Table.css";
import data from "../../data.json";
import Row from "../Row/Row";
import HeaderRow from "../HeaderRow/HeaderRow";
import SettingsHeader from "../SettingsHeader/SettingsHeader";

import { useState } from "react";

export default function Table() {
  /*
  1) Data is fetched from server
  2) Data is rendered based on default settings
  3) Data can be adjusted by user
  */

  // the state of the columns visibility:
  // columns can be reordered, boolean determines if values render in table
  // their existence and sequence determines if they're rendered
  // always have = for visual cue that table is grabbable and - x to indicate

  // eventually this will be controlled by the user when they select which columns they want to view:
  const initColStateSeq = Object.keys(data[0]);

  // columns are generated by the number of headers

  // The rows are the "tuples" of each object in the data set

  // const cols = {
  //   gridTemplateColumns: `repeat(${initColStateSeq.length}, 1 fr)`,
  // };

  // how to get icons onto the header whilst keeping the columns aligned

  const [tableDisplay, setTableDisplay] = useState(true);
  const [currColState, adjustColumnState] = useState(initColStateSeq);
  // the quick thought is that the icons need to be agnostic/independent of the actual table

  // the "rows" for the tables should just be 3 things: the top adjustment header, the headerRow and then the table content itself
  const rows = {
    gridTemplateRows: `3rem auto auto`,
  };

  const tableSize = {};

  // based on the sequence will determine which keys we access from our JSON data as we iterate through it

  return (
    <div style={rows} draggable className="dashboard-table">
      <SettingsHeader
        tableDisplay={tableDisplay}
        setTableDisplay={setTableDisplay}
      />
      <HeaderRow tableDisplay={tableDisplay} headers={initColStateSeq} />
      {data.map((el, i) =>
        tableDisplay ? (
          <Row
            tableDisplay={tableDisplay}
            key={`row-${i}`}
            el={el}
            headers={initColStateSeq}
          />
        ) : (
          ""
        )
      )}
    </div>
  );
}
